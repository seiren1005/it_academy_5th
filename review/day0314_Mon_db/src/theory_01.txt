Sub Query (서브 쿼리)
쿼리 안에 또 하나의 쿼리가 존재

SQL 작성시 질문이 여러가지가 한꺼번에 나오는 경우
emp TABLE에서 'SCOTT'이라는 사람보다 급여를 많이 받는 사람은 누구일까
'SCOTT'의 급여를 알아야 'SCOTT'보다 급여를 많이 받는 사람의 급여를 조회 가능

1) 'SCOTT'의 급여를 구함
2) 'SCOTT'의 급여보다 많이 받는 사람을 구함

2번 SQL을 실행해야 되기 때문에 서버에 질의를 두번 하는 것과 같은 -> 성능 저하
SQL을 한 번만 보내기 위해서 서브 쿼리 사용

1번 쿼리를 서버에 보냄
서버가 1번 커리의 결과를 출력
2번 쿼리를 서버에 보냄
서버가 2번 쿼리의 결과를 출력

서브 쿼리를 서버에 보냄
서버가 서브 쿼리의 결과를 나에게 보여줌


서브 쿼리 사용법
SELECT [column_name]
FROM [table_name]
WHERE 조건 연산자 ( SELECT [column_name]
                    FROM [table_name]
                    WHERE [조건] );
괄호 안의 쿼리 : 서브 쿼리
괄호 밖의 쿼리 : 메인 쿼리


서브 쿼리 종류 : 단일행, 다중행 (사용되는 연산자 종류가 다름)
단일행 : 서브 쿼리의 결과가 단 1행
서브 쿼리의 결과 1 건을 메인 커리로 전달
WHERE 절에서 사용되는 연산자 종류 (비교연산자들)
= : 같다
<> : 같지 않다
> : 크다 (>= : 크거나 같다)
< : 작다 (<= : 작거나 같다)


다중행 서브 쿼리 : 서브 쿼리의 결과가 2건 이상 (단일행은 1건) 일 때 사용
결과가 여러건 나오기 대문에 단일행 연산자를 사용할 수 없음
WHERE 표현식 > (다중행 서브 쿼리)
서브 쿼리의 결과가 2건 이상
ex) 50, 100 -> 부등호 혼자 사용 불가
특수 연산자 IN(), ANY(), ALL(), EXIST() ...

IN(a, b, c, ...) : a or b or c or ...

비교 연산자 ANY(a, b, c) : a or b or c or ... 중 만족하는 값이 하나만 있어도 됨
WHERE pay > ANY(500, 1000, 2000)
pay가 500, 1000, 2000 중에 하나보다 큰 값이 있으면 true
if pay = 1000, 1000 > 500 -> true
= ANY()는 IN()과 동일

비교 연산자 ALL(a, b, c, ...) a and b and c and ...
WHERE pay > ALL(500, 1000, 2000)
if pay = 1000, 1000 < 2000 -> false
if pay = 3000, 3000 > 500, 3000 > 1000, 3000 > 2000 -> true 

EXIST(서브 쿼리) : 서브 쿼리의 결과가 한 건이라도 존재하면 true, 없으면 false

